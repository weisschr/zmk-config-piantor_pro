/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

&caps_word {
    continue-list = <BACKSPACE DELETE>;
};

/ {
    chosen {
        zmk,physical-layout = &default_layout;
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
                 &sk LG(LS(LA(LCTRL)))  &kp Q  &kp W   &kp E     &kp R       &kp T   &kp Y     &kp U    &kp I     &kp O   &kp P    &sk LALT
                &sk LGUI               &kp A  &kp S   &kp D     &kp F       &kp G   &kp H     &kp J    &kp K     &kp L   &kp SEMI &kp LCTRL
                &sk LC(LA(LSHIFT))     &kp Z  &kp X   &kp C     &kp V       &kp B   &kp N     &kp M    &kp COMMA &kp DOT &kp FSLH &kp LSHIFT
                                              &kp TAB &kp LSHFT &kp SPACE   &kp RET &kp RSHFT &kp BSPC
            >;
        };

        numbsym_layer {
            display-name = "NUMBER";
            bindings = <
                &trans  &kp EXCL   &kp AT     &kp HASH   &kp DLLR   &kp PRCNT     &kp CARET  &kp AMPS    &kp ASTRK  &kp LPAR   &kp RPAR  &trans
                &trans  &kp N1     &kp N2     &kp N3     &kp N4     &kp N5        &kp N6     &kp N7      &kp N8     &kp N9     &kp N0    &trans
                &trans  &kp GRAVE  &kp BSLH   &kp EQUAL  &kp MINUS  &kp UNDER     &kp SQT    &kp SEMI    &kp COMMA  &kp DOT    &kp SLASH &trans
                                              &trans     &trans     &trans        &trans     &trans      &trans
            >;
        };

        function_layer  {
            display-name = "FUNCTIONS";
            bindings = <
              &trans &kp C_PLAY      &kp C_STOP &kp C_NEXT &kp C_AC_BACK  &kp F11      &kp F12     &kp K_VOL_UP &kp C_VOL_DN  &kp C_MUTE  &kp RG(L)       &trans
              &trans &kp F1          &kp F2     &kp F3     &kp F4         &kp F5       &kp F6      &kp F7       &kp F8        &kp F9      &kp F10         &trans
              &trans &kp LC(LA(DEL)) &trans     &trans     &trans         &trans       &trans      &trans       &trans        &trans      &kp LC(LA(DEL)) &trans
                                                &trans     &trans         &trans       &trans      &trans       &trans       
            >;
        };

    };
};
